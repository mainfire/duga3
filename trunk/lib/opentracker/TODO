perhaps a sync method using the new history table (could use the below implementation)

i have a compact scrape method in mind, it works just like a compact announce, but whether or not this would make any use by adding it in isnt for me to 
decide, thats for the people who write clients to decide if they want to support it or not. heres the idea that i've done a rough implenetation of:

	- as per some compliance with the original compact announce, which would pack the peer IP address (unsigned long, big endian), followed by the peer
	  port (unsigned short, big endian), the scrape method would pack the complete, incomplete, and downloaded values (all unsigned short, big endian). 
	  the scrape array is essentially the same as it was before in becoded format, except the swarm data.
	  
	  A quick way would look like this in PHP
	  
	  $data = pack('n3',$mysql->complete,$mysql->incomplete,$mysql->downloads);

	- unpacking is hardly any effort, a verbose way would look like this in PHP

	  /*
	       do something to retrieve the scrape, bdecoded scrape is an array assigned to $swarms
	  */
	  foreach ($swarms as $swarmdata)
	  {
	       $unpacked = unpack('ncomplete/nincomplete/ndownloaded',$swarmdata);
	       $complete = $unpacked['complete'];
	       $incomplete = $unpacked['incomplete'];
	       $downloaded = $unpacked['downloaded'];
	  }
	  /*
	       do something with the data here
	  */

	- and to clarify, this would be requested in the exact same manner as a compact announce; just make sure the scrape url looks like this in the end:
	  1: /scrape?info_hash=___&info_hash=___&compact=1
	  2: /scrape?info_hash=___&compact=1
	  3: /scrape?compact=1

	- i don't make any claims over this idea, i'm sure someone else has already came up with this by now, so do whatever with it
 
ipv6 is implemented in such a way to implement what is documented on the below url

	- http://www.bittorrent.org/beps/bep_0007.html#rationale